{"ast":null,"code":"import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = new Set();\n    this.refs = new Map();\n  }\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n  describe() {\n    const description = [];\n    for (const item of this.list) description.push(item);\n    for (const [, ref] of this.refs) description.push(ref.describe());\n    return description;\n  }\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n  has(value, resolve) {\n    if (this.list.has(value)) return true;\n    let item,\n      values = this.refs.values();\n    while (item = values.next(), !item.done) if (resolve(item.value) === value) return true;\n    return false;\n  }\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n}","map":{"version":3,"names":["Reference","ReferenceSet","constructor","list","Set","refs","Map","size","describe","description","item","push","ref","toArray","Array","from","concat","values","add","value","isRef","set","key","delete","has","resolve","next","done","clone","merge","newItems","removeItems","forEach"],"sources":["C:/Users/USER/OneDrive/Escritorio/template/react-peliculas/node_modules/yup/es/util/ReferenceSet.js"],"sourcesContent":["import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n\n  describe() {\n    const description = [];\n\n    for (const item of this.list) description.push(item);\n\n    for (const [, ref] of this.refs) description.push(ref.describe());\n\n    return description;\n  }\n\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n\n  has(value, resolve) {\n    if (this.list.has(value)) return true;\n    let item,\n        values = this.refs.values();\n\n    while (item = values.next(), !item.done) if (resolve(item.value) === value) return true;\n\n    return false;\n  }\n\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}