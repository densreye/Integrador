[{"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\index.tsx":"1","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\reportWebVitals.ts":"2","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\App.tsx":"3","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\route-config.ts":"4","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\validaciones.ts":"5","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Menu.tsx":"6","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\RedireccionarALanding.tsx":"7","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Button.tsx":"8","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\ListadoGenerico.tsx":"9","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\FormGroupFecha.tsx":"10","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\FormGroupText.tsx":"11","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Cargando.tsx":"12","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\MostrarErrorCampo.tsx":"13","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\endpoints.ts":"14","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\MostrarErrores.tsx":"15","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Paginacion.tsx":"16","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Confirmar.ts":"17","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\IndiceGeneros.tsx":"18","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\CrearRubrica.tsx":"19","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\EditarRubrica.tsx":"20","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\FormularioRubrica.tsx":"21","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\index.js":"22","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\FormStepper.jsx":"23","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\prueba.tsx":"24"},{"size":576,"mtime":1671914244283,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1671914244291,"results":"27","hashOfConfig":"26"},{"size":726,"mtime":1672130984944,"results":"28","hashOfConfig":"26"},{"size":534,"mtime":1672692086453,"results":"29","hashOfConfig":"26"},{"size":510,"mtime":1671914244422,"results":"30","hashOfConfig":"26"},{"size":1279,"mtime":1672677193242,"results":"31","hashOfConfig":"26"},{"size":149,"mtime":1672131281955,"results":"32","hashOfConfig":"26"},{"size":513,"mtime":1671914244412,"results":"33","hashOfConfig":"26"},{"size":676,"mtime":1671914244417,"results":"34","hashOfConfig":"26"},{"size":1070,"mtime":1671914244415,"results":"35","hashOfConfig":"26"},{"size":744,"mtime":1671920379833,"results":"36","hashOfConfig":"26"},{"size":224,"mtime":1671914244412,"results":"37","hashOfConfig":"26"},{"size":219,"mtime":1671914244419,"results":"38","hashOfConfig":"26"},{"size":92,"mtime":1672681629889,"results":"39","hashOfConfig":"26"},{"size":373,"mtime":1672109254340,"results":"40","hashOfConfig":"26"},{"size":2671,"mtime":1671393074605,"results":"41","hashOfConfig":"26"},{"size":525,"mtime":1671393074597,"results":"42","hashOfConfig":"26"},{"size":4250,"mtime":1672697226701,"results":"43","hashOfConfig":"26"},{"size":1466,"mtime":1672703796399,"results":"44","hashOfConfig":"26"},{"size":1442,"mtime":1672688941368,"results":"45","hashOfConfig":"26"},{"size":1001,"mtime":1672703783984,"results":"46","hashOfConfig":"26"},{"size":4012,"mtime":1672685134423,"results":"47","hashOfConfig":"26"},{"size":1139,"mtime":1672701427075,"results":"48","hashOfConfig":"26"},{"size":4951,"mtime":1672704948576,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1on7b29",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\index.tsx",[],["106","107"],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\reportWebVitals.ts",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\App.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\route-config.ts",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\validaciones.ts",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Menu.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\RedireccionarALanding.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Button.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\ListadoGenerico.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\FormGroupFecha.tsx",[],["108","109"],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\FormGroupText.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Cargando.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\MostrarErrorCampo.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\endpoints.ts",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\MostrarErrores.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Paginacion.tsx",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\utils\\Confirmar.ts",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\IndiceGeneros.tsx",["110","111"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"utils/Button\";\r\nimport { urlGeneros } from \"utils/endpoints\";\r\nimport ListadoGenerico from \"utils/ListadoGenerico\";\r\nimport Paginacion from \"utils/Paginacion\";\r\nimport { generoDTO } from \"./generos.model\";\r\nimport confirmar from \"utils/Confirmar\";\r\n\r\nexport default function IndiceGeneros() {\r\n    const [generos,setGeneros]= useState<generoDTO[]>();\r\n    const [totalDePaginas,setTotalDePaginas]=useState(0);\r\n    const [recordsPorPagina, setRecordsPorPagina]=useState(3);\r\n    const [pagina,setPagina]=useState(1);\r\n    useEffect(()=>{\r\n        cargarDatos();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n    },[pagina,recordsPorPagina])\r\n    function cargarDatos(){\r\n        axios.get(urlGeneros,{\r\n            params: {pagina,recordsPorPagina: recordsPorPagina}\r\n        })\r\n        .then((respuesta:AxiosResponse<generoDTO[]>)=>{\r\n            const totalDeRegistros= \r\n                parseInt(respuesta.headers['cantidadtotalregistros'],10);\r\n            setTotalDePaginas(Math.ceil(totalDeRegistros/recordsPorPagina));\r\n            console.log(respuesta.data);\r\n            setGeneros(respuesta.data);\r\n        })\r\n    }\r\n    async function borrar(id:number){\r\n        try{\r\n            await axios.delete(`${urlGeneros}/${id}`)\r\n            cargarDatos();\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\nreturn (\r\n        <>\r\n            <h3>Rúbricas</h3>\r\n            <Link className=\"btn btn-primary\"to=\"rubricas/crear\">Crear Rúbrica</Link>\r\n            \r\n            <div className=\"form-group\" style={{width:'150px'}}>\r\n                <label> Registros por página: </label>\r\n                <select \r\n                    defaultValue={10}\r\n                    className=\"form-control\" \r\n                    onChange={e=>{\r\n                        setPagina(1)\r\n                        setRecordsPorPagina(parseInt(e.currentTarget.value,10))}}>\r\n                    <option value={5}>5</option>\r\n                    <option value={10}>10</option>\r\n                    <option value={25}>25</option>\r\n                    <option value={50}>50</option>\r\n                </select>\r\n            </div>\r\n            <ListadoGenerico listado={generos}>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Criterios</th>\r\n                            <th>Clasificación</th>\r\n                            <th>Fecha Creación</th>\r\n                            <th>Estado</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {generos?.map(genero=>\r\n                            <tr key={genero.id}>\r\n                                <td>\r\n                                    {genero.nombre}\r\n                                </td>\r\n                                <td>CRITERIOS POR OOLOCAR</td>\r\n                                <td>{genero.clasificacion}</td>\r\n                                <td>{genero.fechaCreacion}</td>\r\n                                <td>{genero.estado==false?<b>Pendiente</b> :<b>Aprobado</b>}</td>\r\n                                <td>\r\n                                    <Link className=\"btn btn-success\" to={`/rubricas/editar/${genero.id}`}>\r\n                                        Editar\r\n                                    </Link>\r\n                                    \r\n                                    <Button\r\n                                    onClick={()=>confirmar(()=>borrar(genero.id))}\r\n                                    className=\"btn btn-danger\">Borrar</Button>\r\n                                    \r\n                                </td>\r\n\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </ListadoGenerico>\r\n            <Paginacion cantidadTotalDePaginas={totalDePaginas}\r\n            paginaActual={pagina} onChange={nuevaPagina=> setPagina(nuevaPagina)}/>\r\n        </>\r\n\r\n    )\r\n}","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\CrearRubrica.tsx",["112","113"],"import { urlGeneros } from \"utils/endpoints\";\r\nimport FormularioRubricas from \"./FormularioRubrica\";\r\nimport axios from 'axios';\r\nimport { generoCreacionDTO } from \"./generos.model\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MostrarErrores from \"utils/MostrarErrores\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CrearGenero() {\r\n    const history = useHistory();\r\n    const [errores,setErrores] = useState<string[]>([]);\r\n    \r\n    async function crear(genero: generoCreacionDTO) {\r\n        try{\r\n           await axios.post(urlGeneros,genero) \r\n           history.push('/rubricas')\r\n        }\r\n        catch(error){\r\n            console.error(error)\r\n            //setErrores(error.response.data);\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h3>Crear Rúbrica</h3>\r\n            <MostrarErrores/>\r\n    \r\n            <FormularioRubricas   modelo={{        \r\n            nombre: \"\",\r\n            clasificacion: \"\",\r\n            criteriOBJ: [{   \r\n                  \r\n            criterio: \"\",\r\n            insatisfactorio: \"\",\r\n            desarrollo: \"\",\r\n            satisfactorio: \"\",\r\n            ejemplar: \"\",\r\n        }],\r\n            fechaCreacion:\"\",\r\n            estado: false,\r\n \r\n\r\n            }} \r\n                 onSubmit={async valores => {\r\n                    await crear(valores);\r\n                    console.log(\"VALORES ACTUALES\",valores)\r\n                 }}\r\n            />\r\n        </>\r\n    )\r\n}","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\EditarRubrica.tsx",["114","115","116"],"import axios, { AxiosResponse } from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Cargando from \"utils/Cargando\";\r\nimport { urlGeneros } from \"utils/endpoints\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport FormularioRubricas from \"./FormularioRubrica\";\r\nimport { generoCreacionDTO, generoDTO } from \"./generos.model\";\r\n\r\nexport default function EditarGenero() {\r\n\r\n    const { id }: any = useParams();\r\n    const [genero,setGenero]=useState<generoCreacionDTO>();\r\n    const [errores,setErrores]=useState<string[]>([]);\r\n    const history = useHistory();\r\n    useEffect(()=>{\r\n        axios.get(`${urlGeneros}/${id}`)\r\n        .then((respuesta:AxiosResponse<generoCreacionDTO>)=>{\r\n            setGenero(respuesta.data)\r\n        })\r\n    })\r\n    async function editar(generoEditar:generoCreacionDTO) {\r\n        try{\r\n            await axios.put(`${urlGeneros}/${id}`,generoEditar);\r\n            history.push('/rubricas')\r\n        }\r\n        catch(error){\r\n            //setErrores(error.response.data)\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <h3>Editar Rúbrica</h3>\r\n            {genero?<FormularioRubricas modelo={genero} \r\n                onSubmit={async valores=>{\r\n                    await editar(valores)\r\n\r\n                }}\r\n            />:<Cargando/>}\r\n        </>\r\n\r\n    )\r\n}","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\rubricas\\FormularioRubrica.tsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import { Formik, Form, FormikHelpers } from \"formik\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Card, CardContent, Typography, Grid, Button } from \"@mui/material\";\r\nimport * as Yup from 'yup'\r\nimport FormGroupText from '../utils/FormGroupText'\r\nimport Button2 from '../utils/Button'\r\nimport { generoCreacionDTO, generoDTO } from \"./generos.model\";\r\n\r\n\r\nimport Prueba from \"prueba/prueba\";\r\n\r\n\r\nexport default function FormularioRubrica(props: formularioRubricaProps){\r\n    const criterios = { criterio: \"\", insatisfactorio: \"\", desarrollo: \"\", satisfactorio: \"\", ejemplar: \"\" };\r\n    \r\n    return(\r\n         <Prueba modelo={props.modelo} onSubmit={props.onSubmit}></Prueba>\r\n    )\r\n}\r\n\r\ninterface formularioRubricaProps{\r\n    modelo: generoCreacionDTO;\r\n   //modelo2:generoDTO;\r\n   // onSubmit2?(valores: generoDTO, accion: FormikHelpers<generoDTO>): void;\r\n    onSubmit(valores: generoCreacionDTO, accion: FormikHelpers<generoCreacionDTO>): void;\r\n}\r\n","C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\index.js",[],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\FormStepper.jsx",[],["131","132"],"C:\\Users\\VICTOR\\Desktop\\INTEGRADORA FINAL\\Integrador\\src\\prueba\\prueba.tsx",["133","134","135"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from 'yup'\r\nimport FormGroupText from '../utils/FormGroupText'\r\nimport Button from '../utils/Button'\r\nimport { generoCreacionDTO } from \"rubricas/generos.model\";\r\n\r\nimport { Formik, Field, FieldArray, FormikHelpers} from \"formik\";\r\nimport { Container, Card, CardContent, Typography, Grid } from \"@mui/material\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport { FormStepper } from \"../prueba/FormStepper\";\r\n\r\n\r\n \r\n\r\n\r\nexport default function Pruebas(props: formularioPruebasProps){\r\n  const criterios = { criterio: \"\", insatisfactorio: \"\", desarrollo: \"\", satisfactorio: \"\", ejemplar: \"\" };\r\n    \r\n  interface valores{\r\n\r\n    nombre: string;\r\n    clasificacion:string;\r\n    criteriOBJ: Array<{\r\n        criterio: string;\r\n        insatisfactorio: string;\r\n        desarrollo: string;\r\n        satisfactorio: string;\r\n        ejemplar: string;\r\n    }>;\r\n    \r\n    }\r\n\r\n    const initialValues: valores = {\r\n        nombre: \"\",\r\n        clasificacion: \"\",\r\n        criteriOBJ: [{   \r\n                  \r\n            criterio: \"\",\r\n            insatisfactorio: \"\",\r\n            desarrollo: \"\",\r\n            satisfactorio: \"\",\r\n            ejemplar: \"\",\r\n        }],\r\n        \r\n        \r\n    };\r\n\r\n  return (\r\n    <Container sx={{ bgcolor: \"#87c1ff4d\", paddingY: 3, marginTop: 5 }}>\r\n      <Typography variant=\"h3\" align=\"center\" component=\"h2\">\r\n        Formulario Criterios\r\n      </Typography>\r\n      <Card sx={{ marginTop: 2 }}>\r\n        <CardContent sx={{ paddingY: 10, paddingX: 5 }}>\r\n          <Formik\r\n            initialValues={\r\n              props.modelo\r\n            }\r\n            onSubmit={props.onSubmit}\r\n\r\n            \r\n          >\r\n            \r\n            {({ values}) => (\r\n              <FormStepper>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6}>\r\n                    <FormGroupText campo=\"nombre\" name=\"nombre\"  placeholder=\"Nombre\" />\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <FormGroupText campo=\"clasificacion\" name=\"clasificacion\" placeholder=\"Clasificación\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <FieldArray name=\"criteriOBJ\" >\r\n                  {({ push, remove }) => (\r\n                    <Grid container spacing={2} sx={{ marginTop: 2, paddingX: 2 }}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                          Criterios\r\n                        </Typography>\r\n                      </Grid>\r\n                      {values.criteriOBJ.map((_, index) => (\r\n                        <>\r\n                        \r\n                          <Grid item md={2.5}>\r\n                            <Field fullWidth name={`criteriOBJ.${index}.criterio`}  component={TextField} placeholder=\"Criterio\" />\r\n                          </Grid>\r\n                          <Grid item md={2}>\r\n                            <Field fullWidth name={`criteriOBJ.${index}.insatisfactorio`} component={TextField} placeholder=\"Insatisfactorio\" />\r\n                          </Grid>\r\n                          <Grid item md={2}>\r\n                            <Field fullWidth name={`criteriOBJ.${index}.desarrollo`} component={TextField} placeholder=\"Desarrollo\" />\r\n                          </Grid>\r\n                          <Grid item md={2}>\r\n                            <Field fullWidth name={`criteriOBJ.${index}.satisfactorio`} component={TextField} placeholder=\"Satisfactorio\" />\r\n                          </Grid>\r\n                          <Grid item md={2}>\r\n                            <Field fullWidth name={`criteriOBJ.${index}.ejemplar`} component={TextField} placeholder=\"Ejemplar\" />\r\n                          </Grid>\r\n                           \r\n                          {index > 0 && (\r\n                            <Grid item md={1.5}>\r\n                              <Button  onClick={() => remove(index)}>\r\n                                Borrar\r\n                              </Button>\r\n                            </Grid>\r\n                          )}\r\n                        </>\r\n                      ))}{\" \"}\r\n                      <Grid item xs={12}>\r\n                        <Button onClick={() => push(initialValues.criteriOBJ.push)}>\r\n                          Añadir Criterio\r\n                        </Button>\r\n                        <Button  \r\n                        type=\"submit\">Salvar</Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </FieldArray>\r\n               \r\n              </FormStepper>\r\n            )}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\ninterface formularioPruebasProps{\r\n    modelo: generoCreacionDTO;\r\n    onSubmit(valores: generoCreacionDTO, accion: FormikHelpers<generoCreacionDTO>): void;\r\n}",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":20,"column":7,"nodeType":"144","endLine":20,"endColumn":32,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":82,"column":51,"nodeType":"148","messageId":"149","endLine":82,"endColumn":53},{"ruleId":"150","severity":1,"message":"151","line":11,"column":12,"nodeType":"152","messageId":"153","endLine":11,"endColumn":19},{"ruleId":"150","severity":1,"message":"154","line":11,"column":20,"nodeType":"152","messageId":"153","endLine":11,"endColumn":30},{"ruleId":"150","severity":1,"message":"155","line":8,"column":29,"nodeType":"152","messageId":"153","endLine":8,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":14,"column":12,"nodeType":"152","messageId":"153","endLine":14,"endColumn":19},{"ruleId":"150","severity":1,"message":"154","line":14,"column":20,"nodeType":"152","messageId":"153","endLine":14,"endColumn":30},{"ruleId":"150","severity":1,"message":"156","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"157","line":1,"column":18,"nodeType":"152","messageId":"153","endLine":1,"endColumn":22},{"ruleId":"150","severity":1,"message":"158","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"150","severity":1,"message":"159","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":19},{"ruleId":"150","severity":1,"message":"160","line":4,"column":21,"nodeType":"152","messageId":"153","endLine":4,"endColumn":25},{"ruleId":"150","severity":1,"message":"161","line":4,"column":27,"nodeType":"152","messageId":"153","endLine":4,"endColumn":38},{"ruleId":"150","severity":1,"message":"162","line":4,"column":40,"nodeType":"152","messageId":"153","endLine":4,"endColumn":50},{"ruleId":"150","severity":1,"message":"163","line":4,"column":52,"nodeType":"152","messageId":"153","endLine":4,"endColumn":56},{"ruleId":"150","severity":1,"message":"164","line":4,"column":58,"nodeType":"152","messageId":"153","endLine":4,"endColumn":64},{"ruleId":"150","severity":1,"message":"165","line":5,"column":13,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"166","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"167","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":15},{"ruleId":"150","severity":1,"message":"155","line":8,"column":29,"nodeType":"152","messageId":"153","endLine":8,"endColumn":38},{"ruleId":"150","severity":1,"message":"168","line":15,"column":11,"nodeType":"152","messageId":"153","endLine":15,"endColumn":20},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"150","severity":1,"message":"158","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"165","line":3,"column":13,"nodeType":"152","messageId":"153","endLine":3,"endColumn":16},{"ruleId":"150","severity":1,"message":"168","line":18,"column":9,"nodeType":"152","messageId":"153","endLine":18,"endColumn":18},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cargarDatos'. Either include it or remove the dependency array.","ArrayExpression",["171"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'errores' is assigned a value but never used.","Identifier","unusedVar","'setErrores' is assigned a value but never used.","'generoDTO' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'Yup' is defined but never used.","'FormGroupText' is defined but never used.","'Button2' is defined but never used.","'criterios' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Update the dependencies array to be: [cargarDatos, pagina, recordsPorPagina]",{"range":"174","text":"175"},[786,811],"[cargarDatos, pagina, recordsPorPagina]"]